#I've Been using SQLlite Studio so the comments are no longer marked by a '#' but by "/**/"


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

SELECT *
FROM Spotifydata

/*10 most danceable songs of 2021*/
SELECT artist_name, track_name, danceability
FROM Spotifydata
Order by danceability desc
LIMIT 10

/*10 Happiest songs of 2021*/
SELECT artist_name, track_name, valence
FROM Spotifydata
Order by valence desc
LIMIT 10

/* Artists that appear more than once?*/

SELECT artist_name, COUNT(*) AS artist_count
FROM Spotifydata
GROUP BY artist_name
HAVING COUNT(*) > 1
ORDER BY artist_count desc;


/*Longest running songs*/

Select track_name, artist_name, (duration_ms/1000)/60 AS length_mins
FROM Spotifydata
Order By duration_ms desc

/*Top Instrumental Songs*/

SELECT artist_name, track_name, danceability, instrumentalness
FROM Spotifydata
WHERE instrumentalness > 0
ORDER BY instrumentalness desc

/*Top 10 Good feeling Songs*/

SELECT track_name, artist_name, popularity, energy, valence
FROM Spotifydata
Order BY valence desc
Limit 10;

/*Average popularity danceability and energy*/

SELECT
artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

/*Top 10 artists are by popularity*/
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10
