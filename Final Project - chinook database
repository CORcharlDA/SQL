/*This is a project to analyze a database for Digital Media Store*/


/*Customers not from the USA*/
SELECT customerID, FirstName, LastName, Country
FROM customers
WHERE Country != 'USA';

/*Customers only from Brazil*/
SELECT customerID, FirstName, LastName, Country
FROM customers
WHERE Country = 'Brazil';

/*Invoices of Customers from Brazil, showing the customer's full name, Invoice ID, Date of the invoice, and billing country.*/
Select c.FirstName, c.LastName, i.InvoiceID, i.InvoiceDate, i.BillingCountry
FROM customers AS c
JOIN invoices AS i
ON c.customerId = i.customerID
WHERE i.BillingCountry = 'Brazil';

/*Show employees who are sales agents*/
Select FirstName, LastName, Title
FROM employees
WHERE Title ='Sales Support Agent';

/*Find a unique/distinct list of billing countries from the Invoice table.*/
Select Distinct BillingCountry
FROM invoices

/*Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.*/
SELECT i.InvoiceId, i.Total, e.FirstName, e.LastName
From invoices AS i
JOIN customers AS c
ON i.customerid = c.customerid
Join employees AS e
ON c.SupportRepId = EmployeeId

/*Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.*/

SELECT i.Total, c.FirstName || ' ' || c.LastName AS customer_name, c.Country, e.FirstName, e.LastName
From invoices AS i
JOIN customers AS c
ON i.customerid = c.customerid
Join employees AS e
ON c.SupportRepId = EmployeeId

/*How many Invoices were there in 2009?*/

SELECT count(InvoiceId)
FROM invoices
WHERE InvoiceDate < '2010-01-01 00:00:00'


SELECt *
FROM invoices

/*What are the total sales for 2009?*/

SELECT sum(Total)
FROM invoices 
WHERE InvoiceDate < '2010-01-01 00:00:00'

/*Write a query that includes the purchased track name with each invoice line ID.*/

Select InvoiceLineId, t.name AS Track_Name
FROM invoice_items AS i
Join tracks AS t
ON i.TrackId = t.TrackId;

/*Write a query that includes the purchased track name AND artist name with each invoice line ID.*/
SELECT il.InvoiceLineId, t.Name AS TrackName, ar.Name AS ArtistName
FROM invoice_items il
JOIN tracks t ON il.TrackId = t.TrackId
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId;

/*Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.*/
SELECT t.TrackId, t.Name AS TrackName, a.Title AS AlbumName, mt.Name AS MediaType, g.Name AS Genre
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN media_types mt ON t.MediaTypeId = mt.MediaTypeId
JOIN genres g ON t.GenreId = g.GenreId;

/*Show the total sales made by each sales agent.*/
SELECT e.EmployeeId, e.FirstName || ' ' || e.LastName AS SalesAgent, SUM(i.Total) AS TotalSales
FROM employees e
JOIN customers c ON e.EmployeeId = c.SupportRepId
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY e.EmployeeId, SalesAgent
ORDER BY TotalSales DESC;

/*Which sales agent made the most dollars in sales in 2009?*/
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp

JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;

/*Most frequently purchased track*/
SELECT t.Name AS TrackName, COUNT(*) AS PurchaseCount
FROM tracks t
JOIN invoice_items ii ON t.TrackID = ii.TrackID
GROUP BY t.TrackID
ORDER BY PurchaseCount DESC
LIMIT 1;

/*Most purchased Artist*/

SELECT a.Name AS ArtistName, COUNT(*) AS PurchaseCount
FROM artists a
JOIN albums al ON a.ArtistID = al.ArtistID
JOIN tracks t ON al.AlbumID = t.AlbumID
JOIN invoice_items ii ON t.TrackID = ii.TrackID
GROUP BY a.ArtistID
ORDER BY PurchaseCount DESC
LIMIT 10;

/*Highest priced tracks, top 10*/
SELECT t.Name AS TrackName, t.UnitPrice AS HighestPrice
FROM tracks t
ORDER BY t.UnitPrice DESC
LIMIT 10;


/*Who are the top 5 customers with the highest total purchase amounts?*/
SELECT c.CustomerID, c.FirstName || ' ' || c.LastName AS CustomerName, SUM(ii.UnitPrice * ii.Quantity) AS TotalPurchaseAmount
FROM customers c
JOIN invoices i ON c.CustomerID = i.CustomerID
JOIN invoice_items ii ON i.InvoiceID = ii.InvoiceID
GROUP BY c.CustomerID
ORDER BY TotalPurchaseAmount DESC
LIMIT 5;

/*Most Popular Genres*/
SELECT g.Name AS Genre, COUNT(*) AS TracksSold
FROM genres g
JOIN tracks t ON g.GenreID = t.GenreID
JOIN invoice_items ii ON t.TrackID = ii.TrackID
GROUP BY g.GenreID
ORDER BY TracksSold DESC
LIMIT 3;

/*Best Selling Albums*/
SELECT a.Title AS AlbumTitle, ar.Name AS ArtistName, COUNT(ii.TrackID) AS TracksSold
FROM albums a
JOIN artists ar ON a.ArtistID = ar.ArtistID
JOIN tracks t ON a.AlbumID = t.AlbumID
JOIN invoice_items ii ON t.TrackID = ii.TrackID
GROUP BY a.AlbumID
ORDER BY TracksSold DESC
LIMIT 5;

/*Most popular customer media types*/

SELECT mt.Name AS MediaType, COUNT(ii.TrackID) AS PurchaseFrequency
FROM media_types mt
JOIN tracks t ON mt.MediaTypeId = t.MediaTypeId
JOIN invoice_items ii ON t.TrackID = ii.TrackID
GROUP BY mt.MediaTypeId
ORDER BY PurchaseFrequency DESC
LIMIT 5;

/*Playlist preferences, Amount of plays by playlist*/
SELECT p.PlaylistID, p.Name AS PlaylistName, COUNT(DISTINCT pt.TrackID) AS UniqueTracksCount
FROM playlists p
JOIN playlist_track pt ON p.PlaylistID = pt.PlaylistID
GROUP BY p.PlaylistID
ORDER BY UniqueTracksCount DESC
LIMIT 5;


/*Most Loyal Customers*/
SELECT c.CustomerID, c.FirstName || ' ' || c.LastName AS CustomerName, COUNT(DISTINCT strftime('%Y', i.InvoiceDate)) AS YearsActive
FROM customers c
JOIN invoices i ON c.CustomerID = i.CustomerID
GROUP BY c.CustomerID
HAVING YearsActive > 1 
ORDER BY YearsActive DESC;


